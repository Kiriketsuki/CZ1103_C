1. 
    i.
        a) number == 8
        b) &number == 7700 
        c) error
        d) &p == 3478
        e) error
    ii.
        a) error
        b) &number == 7700
        c) error
        d) &p == 3478
        e) error
    iii.
        a) error
        b) &number == 7700
        c) p == 7700
        d) &p == 3478
        e) error
    iv.
        a) number == 10
        b) &number == 7700
        c) p == 7700
        d) &p == 3478
        e) *p == 10
    v.
        a) number == 3478
        b) &number == 7700
        c) p == 7700
        d) &p = 3478
        e) *p == 3478
    vi.
        a) number = 3478
        b) &number == 7700
        c) p == 3478
        d) &p == 3478
        e) *p == 3478

2. 
    a) no return value. add "return result;"
    b) j not declared as an integer. do "int j". no return value. add "return sum"
    c) float a declared twice. remove the "float a" from the function, not the argument
    d) whatever is inputted via scanf will change h from a pointer into a float. remove & from the scanf function
    e) void function but have return. remove "return *h;"
    f) secondary function defined within primary function. can call but cannot define. move divideBy2 outside of the scope of divideBy4

3.
    i.      "h = 5, k = 15"
    ii.     "h = -100, k = -100"
    iii.    "h = 5, k = 15"
    iv.     "h = 5, k = 15"
    v.      "h = 100, k = 100"
    vi.     "h = 5, k = 15"
    vii.    "h = 5, k = 15"
    viii.   "h = 200, k = 200"
    xi.     "h = 200, k = 200"

4. 
    #include <stdio.h>
    #include <math.h>
    
    float *x_pointer, *y_pointer;
    
    float cal_distance(float x1, float x2, float y1, float y2) {
        float x_difference = pow((x1 - x2),2);
        float y_difference = pow((y1 - y2), 2);
        float to_return = pow((x_difference + y_difference), 0.5);
    
        return to_return;
    }
    
    void cal_distance_reference(float *x1, float *x2, float *y1, float *y2) {
        float x_difference = pow((*x1 - *x2),2);
        float y_difference = pow((*y1 - *y2), 2);
        float distance = pow((x_difference + y_difference), 0.5);
        printf("%f\n", distance);
    }
    
    int main () {
        float x1, x2, y1, y2;
        float *p1, *p2, *p3, *p4;
        x1 = 1.0;
        x2 = 0.5;
        y1 = 10.0;
        y2 = 7.8;
        p1 = &x1;
        p2 = &x2;
        p3 = &y1;
        p4 = &y2;
    
    
        printf("%f\n", cal_distance(x1,x2,y1,y2)); /* call by value */
        cal_distance_reference(p1,p2,p3,p4);
        cal_distance_reference(&x1,&x2,&y1,&y2);
    }